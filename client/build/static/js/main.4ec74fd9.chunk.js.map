{"version":3,"sources":["serviceWorker.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","components/Dashboard/sidebar.jsx","components/Dashboard/dashboard.jsx","components/Wrapper/index.js","pages/Patients.js","pages/PatientLogin.js","pages/PatientList.js","pages/Detail.js","pages/Welcome.jsx","pages/Homepage.js","pages/Notifications.js","pages/NoMatch.js","components/Marker/index.js","components/GoogleMap/index.js","pages/Location.js","pages/LiveChat.js","pages/Emergency.js","pages/Reports.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Jumbotron","children","style","height","clear","paddingTop","textAlign","className","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","getPatients","console","log","getPatient","getPatientByEmail","emailData","params","email","savePatient","patientData","savePatientChat","patientChatData","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","props","TextArea","rows","FormBtn","float","marginBottom","mainListItems","button","ListItemIcon","to","textDecoration","color","activeStyle","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","React","useState","open","setOpen","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","component","variant","noWrap","Badge","badgeContent","Link","logOut","alert","Drawer","Divider","Wrapper","Patients","state","patients","name","password","phone","address","ssn","primaryDrInfo","insuranceInfo","loadPatients","API","then","res","setState","data","catch","err","handleInputChange","event","target","value","handleFormSubmit","preventDefault","this","onChange","placeholder","length","patient","key","_id","Component","PatientLogin","loadPatientByEmail","lifechathistory","chat","chathistory","PatientList","Detail","patientId","Welcome","Button","Homepage","role","Notifications","NoMatch","Marker","class","src","alt","SimpleMap","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","lat","lng","text","defaultProps","GoogleMap","LiveChat","Emergency","Reports","App","exact","path","Login","Home","Maps","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ec74fd9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n\n  getPatients: function () {\n    console.log(\"hello\");\n    return axios.get(\"/api/patients/all\");\n  },\n  // Gets the patient with the given id\n  getPatient: function (id) {\n    return axios.get(\"/api/patients/\" + id);\n  },\n  // Gets the patient with the given email\n  getPatientByEmail: function (emailData) {\n    console.log(\"login email\", emailData);\n    return axios.get(\"/api/patients\", { params: { email:  emailData} });\n  },\n\n  savePatient: function (patientData) {\n    console.log(\"here\", patientData);\n    return axios.post(\"/api/patients\", patientData);\n  },\n\n  savePatientChat: function (patientChatData) {\n    console.log(\"chat here \", patientChatData);\n    return axios.post(\"/api/lifechathistory\", patientChatData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport FaceIcon from '@material-ui/icons/Face';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport InsertInvitationIcon from '@material-ui/icons/InsertInvitation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { NavLink } from 'react-router-dom';\nimport \"./style.css\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button >\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <NavLink to=\"/home\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Dashboard\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LocalHospitalIcon />\n      </ListItemIcon>\n      <NavLink to=\"/emergency\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Emergency\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <FaceIcon />\n      </ListItemIcon>\n      <NavLink to=\"/patients\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"User Profile\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <NavLink to=\"/liveChat\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Live Chat\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PlaceIcon />\n      </ListItemIcon>\n      <NavLink to=\"/location\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Location\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <NavLink to=\"/reports\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Reports\"/>\n        </NavLink>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AddAlertIcon />\n      </ListItemIcon>\n      <NavLink to=\"/notifications\" style={{ textDecoration: 'none', color: 'white' }}\n      activeStyle={{ color: 'cyan'}}>\n        <ListItemText primary=\"Notifications\"/>\n        </NavLink>\n    </ListItem>\n  </div>\n);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems, secondaryListItems } from \"./sidebar\";\nimport \"./style.css\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 2px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div id=\"topBar\" className=\"topBar\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Dashboard\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={0} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Typography>\n            <Link\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.logOut}\n              onClick={() => {\n                alert(\"You are now logged out.\");\n                window.open(\"/\")\n              }}\n            >\n              Log Out\n            </Link>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div id=\"sidebar\" className=\"sidebar\">\n            <div className={classes.toolbarIcon}>\n              <div className=\"logo logo-normal\">\n                <span>APIC</span>\n              </div>\n              {/* <IconButton onClick={handleDrawerClose}>\n            <Badge />\n            </IconButton> */}\n            </div>\n            <Divider />\n            <List className=\"navItem\">{mainListItems}</List>\n            <Divider />\n            {/* <List>{secondaryListItems}</List> */}\n          </div>\n        </Drawer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\nimport Wrapper from \"../components/Wrapper\";\n\nclass Patients extends Component {\n  state = {\n    patients: [],\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    address: \"\",\n    ssn: \"\",\n    primaryDrInfo: \"\",\n    insuranceInfo: \"\"\n  };\n\n  componentDidMount() {\n    this.loadPatients();\n  }\n\n  loadPatients = () => {\n    API.getPatients()\n      .then(res =>\n        this.setState({ patients: res.data, name: \"\", email: \"\", password: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.name) {\n      API.savePatient({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        address: this.state.address,\n        ssn: this.state.ssn,\n        primaryDrInfo: this.state.primaryDrInfo,\n        insuranceInfo: this.state.insuranceInfo\n      })\n        .then(res => this.loadPatients())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Dashboard></Dashboard>\n        <Wrapper>\n        <Container fluid>\n          <Row>\n            <Col size=\"md-6\">\n              <Jumbotron>\n                <h1>Register?</h1>\n              </Jumbotron>\n              <form>\n                <Input\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  name=\"name\"\n                  placeholder=\"Name (required)\"\n                />\n                <Input\n                  value={this.state.email}\n                  onChange={this.handleInputChange}\n                  name=\"email\"\n                  placeholder=\"Email (required)\"\n                />\n                <Input\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                  name=\"password\"\n                  placeholder=\"Password (required)\"\n                />\n                <Input\n                  value={this.state.phone}\n                  onChange={this.handleInputChange}\n                  name=\"phone\"\n                  placeholder=\"phone\"\n                />\n                <Input\n                  value={this.state.address}\n                  onChange={this.handleInputChange}\n                  name=\"address\"\n                  placeholder=\"address\"\n                />\n                <Input\n                  value={this.state.ssn}\n                  onChange={this.handleInputChange}\n                  name=\"ssn\"\n                  placeholder=\"SSN\"\n                />\n                <Input\n                  value={this.state.primaryDrInfo}\n                  onChange={this.handleInputChange}\n                  name=\"primaryDrInfo\"\n                  placeholder=\"primaryDrInfo\"\n                />\n                <Input\n                  value={this.state.insuranceInfo}\n                  onChange={this.handleInputChange}\n                  name=\"insuranceInfo\"\n                  placeholder=\"insuranceInfo\"\n                />\n                <FormBtn onClick={this.handleFormSubmit}>Register</FormBtn>\n              </form>\n            </Col>\n            <Col size=\"md-6 sm-12\">\n              <Jumbotron>\n                <h1>Patients On My List</h1>\n              </Jumbotron>\n              {this.state.patients.length ? (\n                <List>\n                  {this.state.patients.map(patient => (\n                    <ListItem key={patient._id}>\n                      <Link to={\"/patients/\" + patient._id}>\n                        <strong>\n                          {patient._id} | {patient.name} | {patient.password} |\n                          {patient.email} |{patient.ssn} |{\" \"}\n                          {patient.primaryDrInfo} |{patient.insuranceInfo} |\n                        </strong>\n                      </Link>\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Patients to Display</h3>\n              )}\n            </Col>\n          </Row>\n        </Container>\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default Patients;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nclass PatientLogin extends Component {\n  state = {\n    patient: {},\n    email: \"\",\n    password: \"\"\n  };\n\n  loadPatientByEmail = () => {\n    API.getPatientByEmail(this.state.email)\n      .then(res => {\n        console.log(res.data);\n        this.setState({ patient: res.data });\n        console.log(\"now\", this.state.patient);\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.loadPatientByEmail();\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Login?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                name=\"email\"\n                placeholder=\"Email (required)\"\n              />\n              <Input\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                name=\"password\"\n                placeholder=\"Password (required)\"\n              />\n              <FormBtn\n                onClick={this.handleFormSubmit}\n              >\n                LOGIN\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Patient Information {this.state.patient.name}</h1>\n            </Jumbotron>\n            {this.state.patient ? (\n              <strong>\n                {this.state.patient._id}\n                {this.state.patient.name}  \n                {this.state.patient.password}  \n                {this.state.patient.email}  \n                {this.state.patient.ssn}  \n                {this.state.patient.primaryDrInfo}  \n                {this.state.patient.insuranceInfo}  \n                {this.state.patient.lifechathistory ? (this.state.patient.lifechathistory.length ?\n                  this.state.patient.lifechathistory.map(chat =>\n                    chat.chathistory + \" \") : \"\")\n                  : \"\"}\n              </strong>\n            ) : (\n                <h3>No Patients to Display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PatientLogin;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass PatientList extends Component {\n  state = {\n    patients: []\n  };\n\n  componentDidMount() {\n    this.loadPatients();\n  }\n\n  loadPatients = () => {\n    API.getPatients()\n      .then(res =>\n        this.setState({ patients: res.data })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>Patients On The List</h1>\n            </Jumbotron>\n            {this.state.patients.length ? (\n              <List>\n                {this.state.patients.map(patient => (\n                  <ListItem key={patient._id}>\n                    <Link to={\"/patients/\" + patient._id}>\n                      <strong>\n                        {patient._id} | {patient.name} | {patient.password} | {patient.email} |{patient.ssn} | {patient.primaryDrInfo} | {patient.insuranceInfo} |\n                      </strong>\n                      {patient.lifechathistory ? (patient.lifechathistory.length ?\n                        patient.lifechathistory.map(chat =>\n                          chat.chathistory + \" \") : \"\")\n                        : \"\"}\n                    </Link>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n                <h3>No Patients to Display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PatientList;\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { TextArea, FormBtn } from \"../components/Form\";\n\nclass Detail extends Component {\n  state = {\n    patient: {},\n    chat: \"\"\n  };\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    API.getPatient(this.props.match.params.id)\n      .then(res => this.setState({ patient: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.chat) {\n      API.savePatientChat({\n        patientId: this.props.match.params.id,\n        chathistory: this.state.chat\n      })\n        .then(res => this.loadPatients())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                Hello {this.state.patient.name}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Detail</h1>\n              <p>\n                {this.state.patient.name} | {this.state.patient.phone} | {this.state.patient.primaryDrInfo} | {this.state.patient.insuranceInfo}\n              </p>\n              <p>\n                {this.state.patient.lifechathistory ? (this.state.patient.lifechathistory.length ?\n                  this.state.patient.lifechathistory.map(chat =>\n                    chat.chathistory + \" \") : \"\")\n                  : \"\"}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <form>\n              <TextArea\n                value={this.state.chat}\n                onChange={this.handleInputChange}\n                name=\"chat\"\n                placeholder=\"Chat\"\n              />\n              <FormBtn\n                onClick={this.handleFormSubmit}\n              >\n                Send\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport PatientLogin from \"./PatientLogin\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Welcome() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n            <PatientLogin></PatientLogin>\n            <Link to=\"/home\">\n              {\" \"}\n              <Button variant=\"outlined\" color=\"primary\">\n                Go To Home\n              </Button>\n            </Link>\n            <h1>Welcome</h1>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction Homepage() {\n  return (\n    <div>\n    <Dashboard></Dashboard>\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Homepage</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n              😊\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction Notifications() {\n  return (\n    <div>\n  <Dashboard></Dashboard>\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>NOTIFICATIONS</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n               :)\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\"\nimport \"./style.css\";\n\n\nexport function Marker(props){\n    return (\n        <div class=\"marker\">\n            <img class=\"pin\" src=\"Drawing-Pin.png\" alt=\"markerPin\"></img>\n        </div>\n    )\n\n}","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Marker } from '../Marker';\n \n  \nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n \n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{key:\"AIzaSyALsDGUKJntADnzlBz4-SS4cktc0p-Q1FU&\"}}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <Marker\n            lat={34.098185}\n            lng={-118.326833}\n            text=\"My Marker\"\n          />\n           <Marker\n            lat={59.935417}\n            lng={30.337854}\n            text=\"Apic\"\n          />\n           <Marker\n            lat={59.965413}\n            lng={30.397844}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n \nexport default SimpleMap;","import React from \"react\";\nimport Map from \"../components/GoogleMap\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction GoogleMap() {\n  return (\n    <div>\n    <Dashboard></Dashboard>\n    <Map></Map>\n    </div>\n  );\n}\n\nexport default GoogleMap;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction LiveChat() {\n  return (\n    <div>\n    <Dashboard></Dashboard>\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Live Chat</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                :)\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default LiveChat;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction Emergency() {\n  return (\n    <div>\n    <Dashboard></Dashboard>\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Emergency</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default Emergency;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Dashboard from \"../components/Dashboard/dashboard\";\n\nfunction Reports() {\n  return (\n    <div>\n  <Dashboard></Dashboard>\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Reports</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n               :)\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default Reports;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import './index.css';\nimport Patients from \"./pages/Patients\";\nimport PatientLogin from \"./pages/PatientLogin\";\nimport PatientList from \"./pages/PatientList\";\nimport Detail from \"./pages/Detail\";\nimport Login from \"./pages/Welcome\";\nimport Home from \"./pages/Homepage\";\nimport Notifications from \"./pages/Notifications\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Maps from \"./pages/Location\";\nimport LiveChat from \"./pages/LiveChat\";\nimport Emergency from \"./pages/Emergency\";\nimport Reports from \"./pages/Reports\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/patients\" component={Patients} />\n          <Route exact path=\"/patients/all\" component={PatientList} />\n          <Route exact path=\"/patients/:id\" component={Detail} />\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/patientLogin\" component={PatientLogin} />\n          <Route exact path=\"/emergency\" component={Emergency} />\n          <Route exact path=\"/location\" component={Maps} />\n          <Route exact path=\"/reports\" component={Reports} />\n          <Route exact path=\"/liveChat\" component={LiveChat} />\n          <Route exact path=\"/notifications\" component={Notifications} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}